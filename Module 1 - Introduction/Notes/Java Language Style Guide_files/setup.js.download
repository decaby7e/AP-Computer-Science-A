// ----------------------------------------------------------------------
// -- SETUP COURSE PAGE:
// ----------------------------------------------------------------------
// -- NOTE: Do not edit this file unless you are a WDS team member.
// -- ABOUT: This file loads all libraries and creates each page.
// -- Authors/Assembler: jmullins@flvs.net
// ======================================================================



	// Determine which Setup File to Use (cdn/js/setup_?.js)
	var isindex, cheatsheet;
	var isexternal;
	var font = settings.course_font;
	var localUrl = rootSet+settings.local_root;
	//console.log("localUrl:" + localUrl);

	//-- setup paths for course css and js files
	//---- process js files, setup paths if local
	for(var i in course_jslibs){
		if(course_jslibs[i].substring(0,4) !== "http"){
			course_jslibs[i] = url_forRequire+"/"+course_jslibs[i];
		}
	}
	//---- process css files, setup paths if local
	for(var i in course_csslibs){
		if(course_csslibs[i].substring(0,4) !== "http"){
			course_csslibs[i] = url_forStyle+"/"+course_csslibs[i];
		}
	}
	
	//just incase someone forgets...
	if(typeof pg_jslibs === 'undefined'){
		pg_jslibs = [];	
	}
	if(typeof pg_csslibs === 'undefined'){
		pg_csslibs = [];	
	}
	
	// Calls in the language file if needed for global
	if(settings.use_local_language == true || external.render_for_ca == true || external.render_for_gs == true) {
		require(['local_language']);
	}else{
		require(['language']);
	}

	
	//--------------------------HOME PAGE-------------------------------//
	//------------------------------------------------------------------//
	if(isindex === true) { // Home Page Setup
		require(['home_setup', 'local_home'], function () {
			
			//Arrary CSS (core) Files
			//============================================
			var core_csslibs = [
				font,
				localUrl + '/css/fonts.css',
				url_fromHome + '/css/bootstrap.min.css',
				url_fromHome + '/css/bootstrap-theme.css',
				url_fromHome+'/css/core_home.css',
				url_fromHome + '/css/core_menu.css',
			];
			
			core_csslibs.push(localUrl + '/css/ilskin/template/' + settings.uiSkin + '.css'); //IL skin
			core_csslibs.push(localUrl + '/css/home.css');//local theme (course or lo)
				
			var csslibs = core_csslibs.concat(pg_csslibs);
			csslibs = cleanArray(csslibs);

			for(var c=0; c<csslibs.length; c++){
				loadCss(csslibs[c]);	
			}
			
		});
	
	//--------------------------END HOME PAGE-------------------------------//
	//--------------------------START CHEATSHEET SECTION---------------------//
	}else if(cheatsheet === true){
		require(['cheatsheet_setup'], function () {
			
			//Arrary CSS (core) Files
			//============================================
			var core_csslibs = [
				font,
				localUrl + '/css/fonts.css',
				url_fromGlobal + '/css/bootstrap.min.css',
				url_fromGlobal + '/css/bootstrap-theme.css',
				url_fromGlobal+'/css/core_cheatsheet.css'
			];
			
			var csslibs = core_csslibs.concat(course_csslibs, pg_csslibs);
			csslibs = cleanArray(csslibs);

			for(var c=0; c<csslibs.length; c++){
				loadCss(csslibs[c]);	
			}
			
		});
	//--------------------------END CHEATSHEET SECTION---------------------//
	//--------------------------START PAGE SECTION---------------------//
	}else{//Course Page Setup
	
		//simple function to allow the course specific page to load after page has loaded up
		//allows for course specifics to happens
		function pageLoaded(){
			//cutome course.js load
			require(['local_course']);
				
			//require added js files, and then the page specific ones
			require(course_jslibs, function () {
				
			//-------------test if has interactive, if it does we want to load the importer first, and additional interactive files.---//
			//----------------Thus, the require(pg_jslibs) and require(local_analytics) is on the importer page, so it will load after---//
			//-------------------  If not then it happenes here--------------------//

			//--------------------------INTERACTIVES------------------------------//
			//--------------------------------------------------------------------//

			    var il_csslibs = [];
				
				if($('.ilShell').length){
					//if ( $('.ilShell .jCustom') && $('.ilShell').attr("data-ui") === "true"){
					loadCss(url_fromGlobal + '/css/ilskin/jquery-ui-1.10.4.custom.min.css');
					loadCss(url_fromGlobal + '/css/ilskin/ui_interactive_defaults.css');
					require(['jQueryUI'], function (jQueryUI){
						require(['interactives']);
					});
				}
				
				
				if(typeof isglossary === 'undefined'){ require(pg_jslibs); }
				if(settings.use_analytics === true) {require(['local_analytics']); }
				
				//-------------add last style sheets for ui and interactives---------//
				//-------------these need to load after jQueryUI---------------------//
				il_csslibs.push(localUrl + '/css/ilskin/template/' + settings.uiSkin + '.css'); //IL skin
				il_csslibs.push(localUrl + '/css/interactives.css');
				
				//--------------------Merge il_css and page_css to load last-------------------//
				var ILcsslibs = il_csslibs.concat(pg_csslibs);	
	
				ILcsslibs = cleanArray(ILcsslibs);
	
				for(var c=0; c<ILcsslibs.length; c++){
					loadCss(ILcsslibs[c]);	
				}	
				
			});

			if(typeof include_math !== 'undefined' && include_math == true){
				jQMath_Reparse();
			}

		}
					
		if(typeof isglossary != 'undefined' && isglossary == true){
			require(['glossary'], function (glossary) { });
		}
		
        // %mins------------------------------     require(['lib', 'core'], function (lib, core) {
		require(['scripts_min'], function (scripts_min) {
			
			// Chrome issue where long videos are freezing a page
			$('.video,.audio').attr("preload","none");
			
			//--------------Arrary CSS (core) Files-----------------//
			//--------------------from CDN--------------------------//
			//------------------------------------------------------//
			var core_csslibs = [
				font,
				localUrl + '/css/fonts.css',
				// %mins------------------------------     url_fromGlobal + '/css/bootstrap.min.css',
				// %mins------------------------------     url_fromGlobal + '/css/bootstrap-theme.css',
				// %mins------------------------------     url_fromGlobal + '/css/core_theme.css',
				// %mins------------------------------     url_fromGlobal + '/css/core_lib.css',
				// %mins------------------------------     url_fromGlobal + '/css/core_menu.css'
				url_fromGlobal + '/css/flvs-core.min.css',
				url_fromGlobal + '/css/mediaelementplayer.min.css',
			    url_fromGlobal + '/css/mejs-skins.css'
			];
			
			//--------------------from local Global--------------------------//
			//---------------------------------------------------------------//
			core_csslibs.push(localUrl + '/css/theme.css');//local theme (course or lo)
			core_csslibs.push(localUrl + '/css/lib.css');//
			core_csslibs.push(localUrl + '/css/mejs-skins.css');
			
			if(isexternal == true){
			  core_csslibs.push(url_fromGlobal + '/css/core_external.css'); //external styles
			  core_csslibs.push(localUrl + '/css/external.css');
			}
			
			//--------------------Merge Arrayscore and page-------------------//
			var csslibs = core_csslibs.concat(course_csslibs);	

			csslibs = cleanArray(csslibs);

			for(var c=0; c<csslibs.length; c++){
				loadCss(csslibs[c]);	
			}
			
			
			if (typeof init == 'function') { init(); }	
			
		});
	}//END Course Page Setup